C51 COMPILER V8.12   CODE                                                                  03/29/2019 16:20:31 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN CODE.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CODE.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h> // Include Header file to work With 8051 Family Microcontroller
   2          #include<stdio.h> // Include stdio.h , as we are using sprintf() function
   3          #define LCDPort P1  // LCD data/Command bus (PIBN 7 to PIN 14) is Connected to P1 (PIN 1 to PIN 8) of 8051
   4          sbit  RS=P0^0; // RS pin of LCD (PIN 4) is Connected to P0.0 (PIN 39) of 8051
   5          sbit  RW=P0^1; // RW pin of LCD (PIN 5) is Connected to P0.1 (PIN 38) of 8051
   6          sbit  EN=P0^2; // EN pin of LCD (PIN 6) is Connected to P0.2 (PIN 37) of 8051
   7          sbit SENSOR=P3^2; // The PULSE Sensor is Connected with P3.2 (PIN 12) of 8051
   8          
   9          
  10          
  11          //------------------------------------------------------------------------------//
  12          void delay(int t) // This function will generate approx t ms delay
  13          {
  14   1          int i;
  15   1           
  16   1              while(t>0) // Loop until t become ZERO
  17   1               { 
  18   2                 i=1275; // Set the Starting Value of i with 1275
  19   2                 while(i>0) i--; // Decrease the Value of i by -1, unti i become ZERO
  20   2                 t--; // Decrease the Value of t by -1
  21   2               }
  22   1      
  23   1      }
  24          
  25          void LCDCommand(char c) // This function will send a command to LCD
  26            {
  27   1          RS=0; // RS=0 means, we are sending Command to LCD
  28   1              RW=0; // RW=0 means, we are using the LCD in Write Mode
  29   1              LCDPort=c; //Copy the Value of c(Command) to LCDPort (P1 in Our Case)
  30   1              EN=1; // Set EN pin High ---------------+
  31   1              delay(2); // Wait for 2 ms                              +--- Generate a High to  Low Pulse
  32   1              EN=0; // Reset the EN pin Back to LOW --+
  33   1        }
  34            
  35          void LCDData(char c) // This function will send a Data to LCD
  36            {
  37   1          RS=1; // RS=1 means, we are sending Data to LCD
  38   1              RW=0; // RW=0 means, we are using the LCD in Write Mode
  39   1              LCDPort=c; //Copy the Value of c(Data) to LCDPort (P1 in Our Case)
  40   1              EN=1; // Set EN pin High ---------------+
  41   1              delay(2); // Wait for 2 ms                              +--- Generate a High to  Low Pulse
  42   1              EN=0; // Reset the EN pin Back to LOW --+
  43   1        }
  44           // To use the LCD we must have to Initilized IT
  45          void LCDInit() // This function will Initilized the LCD
  46           { 
  47   1           LCDCommand(0x38); // 0x38 - 8 Bit Mode
  48   1               LCDCommand(0x06); // 0x06 - Display from Left To Right
  49   1               LCDCommand(0x0c); // 0x0c - Display On, Cursor Hide
  50   1               LCDCommand(0x01); // 0x01 - Clear LCD
  51   1       }        
  52          // String:  A string is Nothing but array of Characters , terminated by NULL ('\0')
  53          //          array index start from ZERO (0)
  54          
  55          void LCDPuts(char *s) // This function will Display a string on LCD
C51 COMPILER V8.12   CODE                                                                  03/29/2019 16:20:31 PAGE 2   

  56          {
  57   1         int i; // Declare Local Variable i to use as index of the character of the Stringfor(i=0;
  58   1         for(i=0;s[i]!='\0';i++) // Scan each and every Character of the string one by one, untill it encounter 
             -NULL ('\0')
  59   1               {
  60   2                  LCDData(s[i]); // and display the data on LCD with the Help of LCDData() function
  61   2               }
  62   1      }
  63          
  64          
  65          void main() // the main() function start here
  66          {
  67   1         
  68   1         int PULSE=0; // Declare Local Variable PULSE to store the PULOSE Count
  69   1         int UNIT=0;  // Declare Variable to Store UNIT
  70   1         char buffer[10]; // Declare an array of character to store converted data
  71   1         LCDInit(); // Initilizing the LCD
  72   1         
  73   1         LCDPuts("   IoT  Based   ");
  74   1         LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  75   1         LCDPuts(" Energy Meter   ");
  76   1         
  77   1      
  78   1           delay(100); // Wait for 100 ms
  79   1               LCDCommand(0x01); // Clear The LCD
  80   1               LCDPuts("Developed By....");
  81   1               delay(100); // Wait for 100 ms
  82   1      
  83   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  84   1           LCDPuts("Arindam Das     ");
  85   1               delay(100); // Wait for 100 ms
  86   1      
  87   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  88   1           LCDPuts("Rajarshi Nath   ");
  89   1               delay(100); // Wait for 100 ms
  90   1      
  91   1      
  92   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  93   1           LCDPuts("Bitopan Nath    ");
  94   1               delay(100); // Wait for 100 ms
  95   1      
  96   1      
  97   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  98   1           LCDPuts("Shadaab Ahmed   ");
  99   1               delay(100); // Wait for 100 ms
 100   1      
 101   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
 102   1           LCDPuts("AEC-EE-2019     ");
 103   1               delay(100); // Wait for 100 ms
 104   1      
 105   1               LCDCommand(0x01); // Clear The LCD
 106   1              
 107   1               LCDPuts("UNIT :");
 108   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
 109   1           LCDPuts("Pulse:");
 110   1              
 111   1      
 112   1            
 113   1         while(1)  // Starting of main indefinit loop
 114   1          {
 115   2                
 116   2                  if(SENSOR==0) // if Sensor Output Goes LOW
C51 COMPILER V8.12   CODE                                                                  03/29/2019 16:20:31 PAGE 3   

 117   2                       {
 118   3                  PULSE++; // Increase the PULSE by +1
 119   3                              sprintf(buffer,"%4d",PULSE); // Convert the Numeric PULSE Value into String, and store it in buffer
 120   3                              LCDCommand(0xc6); // Move the Cursor to the 6th position of 2nd Line
 121   3                              LCDPuts(buffer); // and display the data stored in buffer(PULSE)
 122   3                              while(SENSOR==0); // Wait unitl the sensor OUTPUT goes LOW
 123   3                              if(PULSE>=10) // if PULSE become 10 (in case of actual implementation it will be 800/1600/3200 dependin
             -g on meter)
 124   3                               {
 125   4                       UNIT++; // Increase the value of UNIT by +1
 126   4                       PULSE=0; // Reset the Value of PULSE to 0
 127   4      
 128   4                                 sprintf(buffer,"%4d",UNIT); // Convert the Numeric UNIT Value into String, and store it in buffer
 129   4                                 LCDCommand(0x86); // Move the Cursor to the 6th position of 1st Line
 130   4                                 LCDPuts(buffer); // and display the data stored in buffer(UNIT)
 131   4      
 132   4                                 
 133   4                                 sprintf(buffer,"%4d",PULSE); // Convert the Numeric PULSE Value into String, and store it in buffer
 134   4                                 LCDCommand(0xc6); // Move the Cursor to the 6th position of 2nd Line
 135   4                                 LCDPuts(buffer); // and display the data stored in buffer(PULSE)
 136   4      
 137   4                                
 138   4                               }
 139   3                       }
 140   2      
 141   2      
 142   2      
 143   2              }
 144   1          
 145   1      
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    416    ----
   CONSTANT SIZE    =    154    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
