C51 COMPILER V8.12   CODE                                                                  03/15/2019 16:36:12 PAGE 1   


C51 COMPILER V8.12, COMPILATION OF MODULE CODE
OBJECT MODULE PLACED IN CODE.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE CODE.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h> // Include Header file to work With 8051 Family Microcontroller
   2          
   3          #define LCDPort P1  // LCD data/Command bus (PIBN 7 to PIN 14) is Connected to P1 (PIN 1 to PIN 8) of 8051
   4          sbit  RS=P0^0; // RS pin of LCD (PIN 4) is Connected to P0.0 (PIN 39) of 8051
   5          sbit  RW=P0^1; // RW pin of LCD (PIN 5) is Connected to P0.1 (PIN 38) of 8051
   6          sbit  EN=P0^2; // EN pin of LCD (PIN 6) is Connected to P0.2 (PIN 37) of 8051
   7          //------------------------------------------------------------------------------//
   8          void delay(int t) // This function will generate approx t ms delay
   9          {
  10   1          int i;
  11   1           
  12   1              while(t>0) // Loop until t become ZERO
  13   1               { 
  14   2                 i=1275; // Set the Starting Value of i with 1275
  15   2                 while(i>0) i--; // Decrease the Value of i by -1, unti i become ZERO
  16   2                 t--; // Decrease the Value of t by -1
  17   2               }
  18   1      
  19   1      }
  20          
  21          void LCDCommand(char c) // This function will send a command to LCD
  22            {
  23   1          RS=0; // RS=0 means, we are sending Command to LCD
  24   1              RW=0; // RW=0 means, we are using the LCD in Write Mode
  25   1              LCDPort=c; //Copy the Value of c(Command) to LCDPort (P1 in Our Case)
  26   1              EN=1; // Set EN pin High ---------------+
  27   1              delay(2); // Wait for 2 ms                              +--- Generate a High to  Low Pulse
  28   1              EN=0; // Reset the EN pin Back to LOW --+
  29   1        }
  30            
  31          void LCDData(char c) // This function will send a Data to LCD
  32            {
  33   1          RS=1; // RS=1 means, we are sending Data to LCD
  34   1              RW=0; // RW=0 means, we are using the LCD in Write Mode
  35   1              LCDPort=c; //Copy the Value of c(Data) to LCDPort (P1 in Our Case)
  36   1              EN=1; // Set EN pin High ---------------+
  37   1              delay(2); // Wait for 2 ms                              +--- Generate a High to  Low Pulse
  38   1              EN=0; // Reset the EN pin Back to LOW --+
  39   1        }
  40           // To use the LCD we must have to Initilized IT
  41          void LCDInit() // This function will Initilized the LCD
  42           { 
  43   1           LCDCommand(0x38); // 0x38 - 8 Bit Mode
  44   1               LCDCommand(0x06); // 0x06 - Display from Left To Right
  45   1               LCDCommand(0x0c); // 0x0c - Display On, Cursor Hide
  46   1               LCDCommand(0x01); // 0x01 - Clear LCD
  47   1       }        
  48          // String:  A string is Nothing but array of Characters , terminated by NULL ('\0')
  49          //          array index start from ZERO (0)
  50          
  51          void LCDPuts(char *s) // This function will Display a string on LCD
  52          {
  53   1         int i; // Declare Local Variable i to use as index of the character of the Stringfor(i=0;
  54   1         for(i=0;s[i]!='\0';i++) // Scan each and every Character of the string one by one, untill it encounter 
             -NULL ('\0')
C51 COMPILER V8.12   CODE                                                                  03/15/2019 16:36:12 PAGE 2   

  55   1               {
  56   2                  LCDData(s[i]); // and display the data on LCD with the Help of LCDData() function
  57   2               }
  58   1      }
  59          
  60          
  61          void main() // the main() function start here
  62          {
  63   1         LCDInit(); // Initilizing the LCD
  64   1         
  65   1         LCDPuts("   IoT  Based   ");
  66   1         LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  67   1         LCDPuts(" Energy Meter   ");
  68   1         
  69   1      
  70   1           delay(100); // Wait for 100 ms
  71   1               LCDCommand(0x01); // Clear The LCD
  72   1               LCDPuts("Developed By....");
  73   1               delay(100); // Wait for 100 ms
  74   1      
  75   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  76   1           LCDPuts("Arindam Das     ");
  77   1               delay(100); // Wait for 100 ms
  78   1      
  79   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  80   1           LCDPuts("Rajarshi Nath   ");
  81   1               delay(100); // Wait for 100 ms
  82   1      
  83   1      
  84   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  85   1           LCDPuts("Bitopan Nath    ");
  86   1               delay(100); // Wait for 100 ms
  87   1      
  88   1      
  89   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  90   1           LCDPuts("Shadaab Ahmed   ");
  91   1               delay(100); // Wait for 100 ms
  92   1      
  93   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
  94   1           LCDPuts("AEC-EE-2019     ");
  95   1               delay(100); // Wait for 100 ms
  96   1      
  97   1               LCDCommand(0x01); // Clear The LCD
  98   1              
  99   1               LCDPuts("UNIT :");
 100   1               LCDCommand(0xc0); // Move the Cursor to the Starting of Second Line
 101   1           LCDPuts("Pulse:");
 102   1              
 103   1      
 104   1            
 105   1         while(1)  // Starting of main indefinit loop
 106   1          {
 107   2      
 108   2              }
 109   1          
 110   1      
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    274    ----
   CONSTANT SIZE    =    150    ----
C51 COMPILER V8.12   CODE                                                                  03/15/2019 16:36:12 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
